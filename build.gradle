buildscript {
    // Build configuration
    ext.buildConfig = [
        minSdk     : 21,
        compileSdk : 28,
        targetSdk  : 28,
        versionCode: 1,
        versionName: "1.0"
    ]

    // Dependency versions
    ext.versions = [
        agp          : "3.5.2",
        kotlin       : "1.3.50",
        detekt       : "1.0.1",
        rxJava       : "2.2.14",
        rxKotlin     : "2.4.0",
        rxAndroid    : "2.1.1",
        dagger       : "2.25.2",
        retrofit     : "2.6.1",
        okhttp       : "4.2.2",
        gson         : "2.8.6",
        arch         : "2.1.0",
        appCompat    : "1.1.0",
        fragment     : "1.1.0",
        navigation   : "2.1.0",
        material     : '1.0.0',
        threetenabp  : "1.2.1",
        threetenbp   : "1.4.0",
        mpChart      : "v3.1.0",
        junit        : "4.12",
        mockito      : "2.2.0",
        mockitoInline: "2.23.0",
        robolectric  : "4.3.1",
        junitAndroid : "1.1.1",
        espresso     : "3.2.0",
        testCore     : "1.2.0"
    ]

    // Dependencies
    ext.deps = [
        kotlin     : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",

        rx         : [
            java   : "io.reactivex.rxjava2:rxjava:$versions.rxJava",
            kotlin : "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin",
            android: "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid"
        ],

        dagger     : [
            runtime        : "com.google.dagger:dagger:$versions.dagger",
            compiler       : "com.google.dagger:dagger-compiler:$versions.dagger",
            androidRuntime : "com.google.dagger:dagger-android-support:$versions.dagger",
            androidCompiler: "com.google.dagger:dagger-android-processor:$versions.dagger"
        ],

        retrofit   : [
            client       : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            adapterRxJava: "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            converterGson: "com.squareup.retrofit2:converter-gson:$versions.retrofit"
        ],

        okhttp     : [
            client : "com.squareup.okhttp3:okhttp:$versions.okhttp",
            logging: "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
        ],

        gson       : "com.google.code.gson:gson:$versions.gson",

        androidx   : [
            viewModel : "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.arch",
            liveData  : "androidx.lifecycle:lifecycle-livedata-ktx:$versions.arch",
            lifecycle : "androidx.lifecycle:lifecycle-runtime:$versions.arch",
            appCompat : "androidx.appcompat:appcompat:$versions.appCompat",
            fragment  : "androidx.fragment:fragment-ktx:$versions.fragment",
            navigation: "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
        ],

        material   : "com.google.android.material:material:$versions.material",
        threetenabp: "com.jakewharton.threetenabp:threetenabp:$versions.threetenabp",
        threetenbp : "org.threeten:threetenbp:$versions.threetenbp",
        mpChart    : "com.github.PhilJay:MPAndroidChart:$versions.mpChart",

        detekt     : [
            formatting: "io.gitlab.arturbosch.detekt:detekt-formatting:$versions.detekt"
        ],

        test       : [
            junit        : "junit:junit:$versions.junit",
            mockito      : "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito",
            mockitoInline: "org.mockito:mockito-inline:$versions.mockitoInline",
            lifecycle    : "androidx.arch.core:core-testing:$versions.arch",
            robolectric  : "org.robolectric:robolectric:$versions.robolectric",
            junitAndroid : "androidx.test.ext:junit:$versions.junitAndroid",
            espresso     : "androidx.test.espresso:espresso-core:$versions.espresso",
            core         : "androidx.test:core:$versions.testCore"
        ],

        plugins    : [
            agp   : "com.android.tools.build:gradle:$versions.agp",
            kotlin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
            detekt: "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$versions.detekt"
        ]
    ]

    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath deps.plugins.agp
        classpath deps.plugins.kotlin
        classpath deps.plugins.detekt
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    apply plugin: "io.gitlab.arturbosch.detekt"

    detekt {
        input = files(
            "src/main/java",
            "src/test/java",
            "src/androidTest/java"
        )
        reports {
            xml { enabled = true }
            html { enabled = false }
            txt { enabled = false }
        }
        config = files(rootProject.file("detekt-config.yml"))
    }

    dependencies {
        detektPlugins(deps.detekt.formatting)
    }


    // common kotlin configuration
    def kotlinConfig = {

        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
            kotlinOptions.jvmTarget = "1.8"
        }
    }
    plugins.withId("kotlin-android", kotlinConfig)
    plugins.withId("kotlin", kotlinConfig)
    plugins.withId("kotlin") {
        // task to run tests for kotlin-only module
        tasks.register("testDebugUnitTest", Test)
    }


    // common android configuration
    def androidConfig = {

        android {
            compileSdkVersion buildConfig.compileSdk
            defaultConfig {
                minSdkVersion buildConfig.minSdk
                targetSdkVersion buildConfig.targetSdk
                testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
            }

            compileOptions {
                sourceCompatibility = "1.8"
                targetCompatibility = "1.8"
            }

            lintOptions {
                abortOnError = true
                warningsAsErrors = true
                htmlReport = false
            }

            packagingOptions {
                exclude 'META-INF/*.kotlin_module'
            }
        }
    }
    plugins.withId("com.android.application", androidConfig)
    plugins.withId("com.android.library", androidConfig)
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
