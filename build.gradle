buildscript {
    // Build configuration
    ext.buildConfig = [
        minSdk     : 21,
        compileSdk : 29,
        targetSdk  : 29,
        versionCode: 1,
        versionName: "1.0"
    ]

    // Dependency versions
    ext.versions = [
        agp      : "3.5.2",
        kotlin   : "1.3.50",
        detekt   : "1.0.1",
        rxJava   : "2.2.14",
        rxKotlin : "2.4.0",
        rxAndroid: "2.1.1",
        dagger   : "2.25.2",
        retrofit : "2.6.1",
        okhttp   : "4.2.2",
        junit    : "4.12"
    ]

    // Dependencies
    ext.deps = [
        kotlin  : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",

        rx      : [
            java   : "io.reactivex.rxjava2:rxjava:${versions.rxJava}",
            kotlin : "io.reactivex.rxjava2:rxkotlin:${versions.rxKotlin}",
            android: "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}"
        ],

        dagger  : [
            runtime        : "com.google.dagger:dagger:$versions.dagger",
            compiler       : "com.google.dagger:dagger-compiler:$versions.dagger",
            androidRuntime : "com.google.dagger:dagger-android-support:$versions.dagger",
            androidCompiler: "com.google.dagger:dagger-android-processor:$versions.dagger"
        ],

        retrofit: [
            client       : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            adapterRxJava: "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            converterGson: "com.squareup.retrofit2:converter-gson:$versions.retrofit"
        ],

        okhttp  : [
            client : "com.squareup.okhttp3:okhttp:$versions.okhttp",
            logging: "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
        ],

        detekt  : [
            formatting: "io.gitlab.arturbosch.detekt:detekt-formatting:${versions.detekt}"
        ],

        test    : [
            junit: "junit:junit:$versions.junit"
        ],

        plugins : [
            agp   : "com.android.tools.build:gradle:$versions.agp",
            kotlin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
            detekt: "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$versions.detekt"
        ]
    ]

    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath deps.plugins.agp
        classpath deps.plugins.kotlin
        classpath deps.plugins.detekt
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

subprojects {
    apply plugin: "io.gitlab.arturbosch.detekt"

    detekt {
        input = files(
            "src/main/java",
            "src/test/java",
            "src/androidTest/java"
        )
        reports {
            xml { enabled = true }
            html { enabled = false }
            txt { enabled = false }
        }
        config = files(rootProject.file("detekt-config.yml"))
    }

    dependencies {
        detektPlugins(deps.detekt.formatting)
    }


    // common kotlin configuration
    def kotlinConfig = {

        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
            kotlinOptions.jvmTarget = "1.8"
        }
    }
    plugins.withId("kotlin-android", kotlinConfig)
    plugins.withId("kotlin", kotlinConfig)
    plugins.withId("kotlin") {
        // task to run tests for kotlin-only module
        tasks.register("testDebugUnitTest", Test)
    }


    // common android configuration
    def androidConfig = {

        android {
            compileSdkVersion buildConfig.compileSdk
            defaultConfig {
                minSdkVersion buildConfig.minSdk
                targetSdkVersion buildConfig.targetSdk
                testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
            }

            compileOptions {
                sourceCompatibility = "1.8"
                targetCompatibility = "1.8"
            }

            lintOptions {
                abortOnError = true
                warningsAsErrors = true
                htmlReport = false
            }
        }
    }
    plugins.withId("com.android.application", androidConfig)
    plugins.withId("com.android.library", androidConfig)
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
